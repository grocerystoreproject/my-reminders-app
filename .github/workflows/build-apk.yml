name: Build My Reminders APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "11"
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git zip unzip libssl-dev libffi-dev python3-dev autoconf automake libtool pkg-config zlib1g-dev libncurses5-dev cmake libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libtool-bin libltdl-dev ccache
        sudo apt-get install -y libunwind-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good
        sudo apt-get install -y libgles2-mesa-dev libglew-dev
        sudo apt-get install -y cython3
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install --upgrade setuptools==58.0.0 wheel
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install virtualenv
        pip install sh
    
    - name: Make buildozer executable
      run: chmod +x $(which buildozer) || true
    
    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses || true
    
    - name: Clean all buildozer directories
      run: |
        rm -rf .buildozer/android/platform/build-* || true
        rm -rf ~/.buildozer || true
    
    - name: Build APK with buildozer
      run: |
        buildozer -v android debug 2>&1 | tee build.log
      continue-on-error: true
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
        USE_PREBUILT_LIBS: '1'
        USE_CCACHE: '1'
        GRADLE_OPTS: '-Xmx4096m -Dorg.gradle.jvmargs=-Xmx4096m'
        P4A_DEBUG: '1'
    
    - name: Fix missing gradlew
      if: always()
      run: |
        echo "Checking for gradlew..."
        
        # Find the dist directory
        DIST_DIR=$(find .buildozer/android/platform/build-arm64-v8a/dists -name "myreminders" -type d | head -1)
        
        if [ -z "$DIST_DIR" ]; then
          echo "Distribution directory not found"
          exit 1
        fi
        
        echo "Found dist directory: $DIST_DIR"
        cd "$DIST_DIR"
        
        # Check if gradlew exists
        if [ ! -f "gradlew" ]; then
          echo "gradlew missing, installing Gradle wrapper..."
          
          # Download and install Gradle 7.6 (compatible with Java 11)
          wget -q https://services.gradle.org/distributions/gradle-7.6.4-bin.zip
          unzip -q gradle-7.6.4-bin.zip
          
          # Initialize gradle wrapper
          ./gradle-7.6.4/bin/gradle wrapper --gradle-version 7.6.4
          
          chmod +x gradlew
          echo "Gradle wrapper installed"
        fi
        
        # Now build
        echo "Building APK..."
        ./gradlew clean assembleDebug --stacktrace
        
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/11.0.26-10/x64
    
    - name: List build artifacts
      if: always()
      run: |
        echo "=== APK search ==="
        echo "Listing bin directory:"
        ls -lah bin/ 2>/dev/null || echo "No bin directory found"
        
        echo "Finding APK files in .buildozer:"
        find .buildozer -name "*.apk" -type f 2>/dev/null || echo "No APK in .buildozer"
        
        echo "Copying APK to bin directory:"
        mkdir -p bin
        find .buildozer -name "*.apk" -type f -exec cp {} bin/ \; 2>/dev/null || true
        
        echo "Final bin directory:"
        ls -lah bin/ 2>/dev/null || echo "Still no bin directory"
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MyReminders-v2.5
        path: bin/*.apk
        if-no-files-found: error
    
    - name: Upload APK as release asset
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: MyReminders-Debug-APK
        path: bin/*.apk
