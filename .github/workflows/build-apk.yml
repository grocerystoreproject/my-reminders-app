name: Build My Reminders APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git zip unzip libssl-dev libffi-dev python3-dev autoconf automake libtool pkg-config zlib1g-dev libncurses5-dev cmake libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libtool-bin libltdl-dev ccache
        sudo apt-get install -y libunwind-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good
        sudo apt-get install -y libgles2-mesa-dev libglew-dev
        sudo apt-get install -y cython3
    
    - name: Cache buildozer global directory
      if: false
      uses: actions/cache@v4
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Cache buildozer directory
      if: false
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-local-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-local-
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install --upgrade setuptools==58.0.0 wheel
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install virtualenv
        pip install sh
    
    - name: Make buildozer executable
      run: chmod +x $(which buildozer) || true
    
    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses || true
    
    - name: Clean previous builds
      run: |
        rm -rf .buildozer/android/platform/build-*/dists/myreminders || true
        rm -rf .buildozer/android/platform/build-*/build/other_builds || true
    
    - name: Build APK with buildozer
      run: |
        buildozer -v android debug
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
        USE_PREBUILT_LIBS: '1'
        USE_CCACHE: '1'
        GRADLE_OPTS: '-Xmx2048m -Dorg.gradle.jvmargs=-Xmx2048m'
    
    - name: Fix gradlew permissions if build failed
      if: failure()
      run: |
        find .buildozer -name gradlew -exec chmod +x {} \; || true
        buildozer -v android debug
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
        USE_PREBUILT_LIBS: '1'
        USE_CCACHE: '1'
        GRADLE_OPTS: '-Xmx2048m -Dorg.gradle.jvmargs=-Xmx2048m'
    
    - name: List build artifacts
      run: |
        echo "Listing bin directory:"
        ls -lah bin/ || echo "No bin directory found"
        echo "Finding APK files:"
        find . -name "*.apk" -type f
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MyReminders-v2.5
        path: bin/*.apk
        if-no-files-found: error
    
    - name: Upload APK as release asset
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: MyReminders-Debug-APK
        path: bin/*.apk
